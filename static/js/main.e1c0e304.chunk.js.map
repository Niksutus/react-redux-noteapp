{"version":3,"sources":["reducers/noteReducer.js","services/notes.js","components/AddForm.js","components/Notes.js","App.js","index.js"],"names":["noteReducer","state","action","type","data","filter","note","id","noteToChange","find","changedNote","strikeThrough","console","log","map","baseUrl","getAll","a","axios","get","response","AddForm","dispatch","useDispatch","onSubmit","event","Number","Math","random","toFixed","preventDefault","newNote","content","target","value","createNote","post","then","catch","error","name","Note","deleteNote","removeNote","delete","deleteNoteFromServer","strikeOut","updatedNote","put","updateNoteOnServer","strikeOutNote","style","textDecoration","onClick","Notes","notes","useSelector","App","useEffect","initializeNotes","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1c0e304.chunk.js","sourcesContent":["const noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"NEW_NOTE\":\n      return [...state, action.data];\n\n    case \"INIT_NOTES\":\n      return action.data;\n\n    case \"DELETE_NOTE\":\n      return [...state.filter((note) => note.id !== action.data)];\n\n    case \"STRIKEOUT_NOTE\":\n      const id = action.data\n      const noteToChange = state.find(note => note.id === id)\n      const changedNote = {\n        ...noteToChange,\n        strikeThrough: !noteToChange.strikeThrough\n      }\n\n      console.log(changedNote)\n      \n      return state.map(note =>\n        note.id !== id ? note : changedNote)\n    \n    default:\n      return state;\n  }\n};\n\n// action-creator for creating new notes\n\nexport const createNote = (content, id) => {\n  return {\n    type: \"NEW_NOTE\",\n    data: {\n      id: id,\n      note: content,\n      strikeThrough: false,\n    },\n  };\n};\n\n// action-creator for initializing already exisiting notes from the JSON-server.\n\nexport const initializeNotes = (notes) => {\n  return {\n    type: \"INIT_NOTES\",\n    data: notes,\n  };\n};\n\nexport default noteReducer;\n\n// action-creator for deleting a note\n\nexport const removeNote = (id) => {\n  return {\n    type: \"DELETE_NOTE\",\n    data: id,\n  };\n};\n\n// action-creator to strikeout a note\n\nexport const strikeOutNote = (id) => {\n  return {\n    type: \"STRIKEOUT_NOTE\",\n    data: id,\n  };\n};\n","import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/notes\";\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst addNoteToServer = (newNote) => {\n  axios\n    .post(baseUrl, newNote)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nconst deleteNoteFromServer = (id) => {\n  axios\n    .delete(`http://localhost:3001/notes/${id}`)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nconst updateNoteOnServer = (id, updatedNote) => {\n  axios\n    .put(`http://localhost:3001/notes/${id}`, updatedNote)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport { getAll, addNoteToServer, deleteNoteFromServer, updateNoteOnServer };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createNote } from \"../reducers/noteReducer\";\nimport { addNoteToServer } from \"../services/notes\";\n\nconst AddForm = () => {\n  const dispatch = useDispatch();\n\n  // random ID generator\n  const generateId = () => {\n    return Number((Math.random() * 1000000).toFixed(0));\n  };\n\n  //add note function\n  const addNote = (event) => {\n    const id = generateId();\n\n    // changing the redux state\n    event.preventDefault();\n    const content = event.target.note.value;\n    event.target.note.value = \"\";\n    dispatch(createNote(content, id));\n    console.log(content);\n    // adding the note to JSON server\n    addNoteToServer({ id: id, note: content, strikeThrough: false });\n  };\n\n  return (\n    <div>\n      <form onSubmit={addNote}>\n        Add a new note:\n        <input name=\"note\" />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { removeNote, strikeOutNote } from \"../reducers/noteReducer\"\nimport { deleteNoteFromServer, updateNoteOnServer } from \"../services/notes\";\n\nconst Note = ({ id, note, strikeThrough }) => {\n  const dispatch = useDispatch();\n\n  const deleteNote = (id) => {\n    dispatch(removeNote(id))\n    deleteNoteFromServer(id)\n  };\n\n  const strikeOut = (id) => {\n    console.log(id)\n\n    const updatedNote = {\n      id: id,\n      note: note,\n      strikeThrough: !strikeThrough\n    }\n\n    updateNoteOnServer(id, updatedNote)\n    dispatch(strikeOutNote(id))\n\n  }\n  if(strikeThrough === true){\n    return(\n      <div>\n      <p style={{textDecoration:\"line-through\"}} onClick={()=>strikeOut(id)}>{note}</p>\n      <button onClick={() => deleteNote(id)}>Delete</button>\n    </div>\n    )\n  }\n\n  return (\n    <div>\n      <p onClick={()=>strikeOut(id)}>{note}</p>\n      <button onClick={() => deleteNote(id)}>Delete</button>\n    </div>\n  );\n};\n\nconst Notes = () => {\n  const notes = useSelector((state) => state);\n  console.log(notes);\n\n  return (\n    <div>\n      {notes.map((note) => (\n        <Note key={note.id} id={note.id} note={note.note} strikeThrough={note.strikeThrough} />\n      ))}\n    </div>\n  );\n};\n\nexport default Notes;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { initializeNotes } from \"./reducers/noteReducer\";\nimport { getAll } from \"./services/notes\" \n\n//components\nimport AddForm from \"./components/AddForm\";\nimport Notes from \"./components/Notes\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      getAll()\n      .then(notes => dispatch(initializeNotes(notes)))\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Todo App</h1>\n      <AddForm />\n      <Notes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport noteReducer from \"./reducers/noteReducer\";\n\nconst store = createStore(noteReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}